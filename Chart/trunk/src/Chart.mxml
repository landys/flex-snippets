<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*"
initialize="initApp()" backgroundColor="0xFFFFFF" layout="vertical" 
paddingLeft="0" paddingRight="0" paddingBottom="0" paddingTop="0">
	<mx:Script><![CDATA[
		import mx.managers.CursorManager;
		import chart.DataModel;
		import mx.utils.ArrayUtil;
		import flash.net.navigateToURL;
		import mx.charts.CategoryAxis;
		import mx.core.IFlexDisplayObject;
		import mx.charts.events.ChartItemEvent;
		import mx.charts.series.items.LineSeriesItem;
		import mx.charts.series.ColumnSeries;
		import mx.effects.Fade;
		import mx.effects.Move;
		import mx.effects.Parallel;
		import mx.charts.HitData;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.http.HTTPService;
		import chart.DataModel;
		import mx.formatters.DateFormatter;
		import mx.utils.StringUtil;
		
		
		// c1 出发城市， c2 到达城市
		[Bindable]
		private var c1:String = "杭州";// "西安";//"杭州";
		[Bindable]
		private var c2:String = "北京";//"三亚";//"北京";
		[Bindable]
		private var begMonth:String;
		[Bindable]
		private var endMonth:String;
		[Bindable]
		private var horiTitle:String = "日期";
		[Bindable]
		private var vetiTitle:String = "价格";
		[Bindable]
		private var allVisible:Boolean = false;
		[Bindable]
		private var itemData:ArrayCollection;
		[Bindable]
		private var summaryData:Object;
		[Bindable]
		private var highest:int;
		[Bindable]
		private var interval:int;
		
		private var goDate:String = "2008-01-29";
		private var backDate:String = "2008-02-02";

		//public static var allData:ArrayCollection;
		[Bindable]
		private var vertLineGo:ArrayCollection;
		
		[Bindable]
		private var vertLineBack:ArrayCollection;
		
		private function initApp():void 
		{
			//System.useCodePage = true;
			c1 = Application.application.parameters.c1 || c1;
			c2 = Application.application.parameters.c2 || c2;
			goDate = Application.application.parameters.goDate || goDate;
			backDate = Application.application.parameters.backDate || backDate;
			
			hs.send();
		}
		
		private function parseDate(s:String):Date 
		{
			var a:Array = s.split("-");
			return new Date(a[0], a[1], a[2]);
		}
		
		private function dayLabel(cat:Object, pcat:Object, ax:CategoryAxis, catItem:Object):String 
		{
			var m:String = cat.toString().split("-")[1];
			var d:String = cat.toString().split("-")[2];
			var weekday:String = dateFormatter.format(StringUtil.trim(cat.toString()));
			if ("Saturday" == weekday || "Sunday" == weekday)
			{
				d = "<font color='#FF0000'>" + d + "</font>";
			}
			else if (begMonth != endMonth && m == endMonth)
			{
				d = "<font color='#FFAD01'>" + d + "</font>";
			}
			return d;
		}
		
		private function priceLabel(cat:Object, pcat:Object, ax:CategoryAxis, catItem:Object):String 
		{
			return cat.toString() + "元";
		}
		
		public function myDataTip(e:ChartItemEvent):String 
		{
			return "a:<B>$b</B>";
		}
		
		public function resultHandler(e:ResultEvent):void
		{
			if (e.result.data == null)
			{
				return;
			}
			allVisible = true;
			itemData = e.result.data.item;
			summaryData = e.result.data.summary;
			DataModel.initAllData(e.result.data.item, e.result.data.summary, c1, c2);
			
			var s:String = (String)(DataModel.allData.getItemAt(0).day);
			begMonth = s.split("-")[1];
			s = (String)(DataModel.allData.getItemAt(DataModel.allData.length-1).day);
			endMonth = s.split("-")[1];
			
			if (begMonth != endMonth)
			{
				s = "(" + begMonth + "月-" + endMonth + "月)";
			}
			else
			{
				s = "(" + begMonth + "月)";
			}
			horiTitle += s;
			// vertical axis
			highest = summaryData.highPrice1;
			if (highest < summaryData.highPrice2)
			{
				highest = summaryData.highPrice2;
			}
			interval = highest / 10;
			highest += interval;
			
			// verticle lines
			vertLineGo = new ArrayCollection([{day:goDate, price:0}, 
				{day:goDate, price:highest}]);
			vertLineBack = new ArrayCollection([{day:backDate, price:0}, 
				{day:backDate, price:highest}]);
		}
		
		private function clickData(e:ChartItemEvent):void
		{
			if (e.hitData.element.name == "去程")
			{
				navigateToURL(new URLRequest(encodeURI("/"+c1+"-"+c2+".html?departDate="+e.hitData.item.day)), "_blank");
			}
			else
			{
				navigateToURL(new URLRequest(encodeURI("/"+c2+"-"+c1+".html?departDate="+e.hitData.item.day)), "_blank");
			}
		}
		
		private function test():String
		{
			return null;
		}
	]]>
	</mx:Script>
	<!--url="http://www.tourbao.cn/special.do; /special.do"-->
	<mx:HTTPService id="hs" method="POST" url="/special.do"
		useProxy="false" showBusyCursor="true" result="resultHandler(event)">
		<mx:request xmlns="">
			<type>flightMonth</type>
			<startCity>{c1}</startCity>
			<destCity>{c2}</destCity>
		</mx:request>
	</mx:HTTPService>
	
	<mx:DateFormatter id="dateFormatter" formatString="EEEE"/>
	
	<mx:Style>
	.myStyle 
	{
		fontSize:12;
	}
	</mx:Style>
	
	<mx:VBox width="100%" height="100%" backgroundColor="#FFFFFF" visible="{allVisible}">
		<mx:Canvas width="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off">
			<mx:HBox width="100%">
				<mx:Spacer width="100"/>
				<mx:VBox width="100%" height="100%"> 
					<mx:HBox width="100%" verticalAlign="middle" horizontalAlign="right">
						<mx:HBox width="100%" height="100%" horizontalAlign="left">
							<mx:Label text="{c1}-{c2}未来一月票价行情" fontWeight="bold" fontSize="15"/>
						</mx:HBox>
						<!--<mx:Label text="更新时间：{summaryData.updateTime}前"  fontSize="12"/>
						<mx:Spacer width="10"/>-->
					</mx:HBox>
					<mx:HBox width="100%" horizontalAlign="left">
						<!--label="{c1}-{c2} 一月内 最低价：{summaryData.lowPrice1}元（{summaryData.highDiscount1}折） 最高价：{summaryData.highPrice1}元（{summaryData.highDiscount1}折） 均价：{summaryData.averagePrice1}元" -->
						<mx:CheckBox id="chkbGo" selected="true" 
							label="{c1}-{c2} 一月内 最低价：{summaryData.lowPrice1}元 最高价：{summaryData.highPrice1}元"
							color="#ff0000" fontSize="12"
							click="lineGo.setVisible(chkbGo.selected); plotGo.setVisible(chkbGo.selected)"/>
					</mx:HBox>
					<mx:HBox width="100%" horizontalAlign="left">
						<!--label="{c2}-{c1} 一月内 最低价：{summaryData.lowPrice2}元（{summaryData.highDiscount2}折） 最高价：{summaryData.highPrice2}元（{summaryData.highDiscount2}折） 均价：{summaryData.averagePrice2}元" -->
						<mx:CheckBox id="chkbBack" selected="true" 		
							label="{c2}-{c1} 一月内 最低价：{summaryData.lowPrice2}元 最高价：{summaryData.highPrice2}元"
							color="#3366cc" fontSize="12"
							click="lineBack.setVisible(chkbBack.selected); plotBack.setVisible(chkbBack.selected)"/>
					</mx:HBox>
				</mx:VBox>
			</mx:HBox>
			<mx:Label text="{vetiTitle}" x="10" y="65" fontSize="12"/>
		</mx:Canvas>
		
		<mx:Canvas width="100%" height="100%">
			<mx:BubbleChart dataProvider="{itemData}" itemClick="clickData(event)"
				showDataTips="true" width="100%" height="100%" dataTipMode="single" dataTipRenderer="FlightDatatipSkin"
				axisTitleStyleName="myStyle">
				<mx:horizontalAxis>
					<mx:CategoryAxis categoryField="day" labelFunction="dayLabel" 
						title="{horiTitle}" ticksBetweenLabels="false"/>
				</mx:horizontalAxis>

				<mx:verticalAxis>
	                <mx:LinearAxis maximum="{highest}" interval="{interval}" />
	            </mx:verticalAxis>

				<mx:horizontalAxisRenderer>
					<mx:AxisRenderer>
						<mx:axisStroke>
							<mx:Stroke weight="1"/>
						</mx:axisStroke>
						
						<mx:tickStroke>
							<mx:Stroke weight="1"/>
						</mx:tickStroke>
						<mx:minorTickStroke>
							<mx:Stroke weight="1"/>
						</mx:minorTickStroke>
					</mx:AxisRenderer>
				</mx:horizontalAxisRenderer>
	
				<mx:verticalAxisRenderer>
					<mx:AxisRenderer>
						<mx:axisStroke>
							<mx:Stroke weight="1"/>
						</mx:axisStroke>
						<mx:tickStroke>
							<mx:Stroke weight="1"/>
						</mx:tickStroke>
						<mx:minorTickStroke>
							<mx:Stroke weight="1"/>
						</mx:minorTickStroke>
					</mx:AxisRenderer>
				</mx:verticalAxisRenderer>
				
				<mx:series>
					<!-- the verticle line -->
					<mx:LineSeries yField="price" xField="day" dataProvider="{vertLineGo}"
						 interactive="false">
						<mx:lineStroke>
							<mx:Stroke color="#ff0000" weight="1"/>
						</mx:lineStroke>
					</mx:LineSeries>
					<mx:LineSeries yField="price" xField="day" dataProvider="{vertLineBack}"
						interactive="false">
						<mx:lineStroke>
							<mx:Stroke color="#3366cc" weight="1"/>
						</mx:lineStroke>
					</mx:LineSeries>
					
					<mx:LineSeries id="lineGo" yField="price1" xField="day" name="去程">
						<mx:lineStroke>
							<mx:Stroke color="#ff0000" weight="1"/>
						</mx:lineStroke>
					</mx:LineSeries>
					<mx:PlotSeries id="plotGo"
						xField="day" yField="price1"
						itemRenderer="mx.charts.renderers.CircleItemRenderer" radius="4"
						name="去程"
						creationComplete="plotGo.setStyle('fill', [0xff0000]);" />
					<mx:LineSeries id="lineBack" yField="price2" xField="day" name="返程">
						<mx:lineStroke>
							<mx:Stroke color="#3366cc" weight="1"/>
						</mx:lineStroke>
					</mx:LineSeries>
					<mx:PlotSeries id="plotBack" xField="day" yField="price2"
						itemRenderer="mx.charts.renderers.CircleItemRenderer" radius="4" 
						name="返程" 
						creationComplete="plotBack.setStyle('fill', [0x3366cc]);" />
				</mx:series>
				<mx:backgroundElements>
	                <mx:Array>
	                    <mx:GridLines direction="horizontal">
	                        <mx:horizontalStroke>
	                            <mx:Stroke weight="1" color="#CCCCCC"/>
	                        </mx:horizontalStroke>
	                    </mx:GridLines>
	                </mx:Array>
	            </mx:backgroundElements>
			</mx:BubbleChart>
		</mx:Canvas>
	</mx:VBox>

</mx:Application>
